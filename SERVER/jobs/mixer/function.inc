jobs_mixer_create_gtd()
{
    jobs::Gmixer[0] = TextDrawCreate(198.000, 103.000, "LD_SPAC:white");
    TextDrawTextSize(jobs::Gmixer[0], 251.000, 118.000);
    TextDrawAlignment(jobs::Gmixer[0], 1);
    TextDrawColor(jobs::Gmixer[0], 189);
    TextDrawSetShadow(jobs::Gmixer[0], 0);
    TextDrawSetOutline(jobs::Gmixer[0], 0);
    TextDrawBackgroundColor(jobs::Gmixer[0], 255);
    TextDrawFont(jobs::Gmixer[0], 4);
    TextDrawSetProportional(jobs::Gmixer[0], 1);

    jobs::Gmixer[1] = TextDrawCreate(198.000, 232.000, "LD_SPAC:white");
    TextDrawTextSize(jobs::Gmixer[1], 251.000, 46.000);
    TextDrawAlignment(jobs::Gmixer[1], 1);
    TextDrawColor(jobs::Gmixer[1], 189);
    TextDrawSetShadow(jobs::Gmixer[1], 0);
    TextDrawSetOutline(jobs::Gmixer[1], 0);
    TextDrawBackgroundColor(jobs::Gmixer[1], 255);
    TextDrawFont(jobs::Gmixer[1], 4);
    TextDrawSetProportional(jobs::Gmixer[1], 1);

    jobs::Gmixer[2] = TextDrawCreate(202.000, 254.000, "LD_SPAC:white");
    TextDrawTextSize(jobs::Gmixer[2], 45.000, 18.000);
    TextDrawAlignment(jobs::Gmixer[2], 1);
    TextDrawColor(jobs::Gmixer[2], -376014081);
    TextDrawSetShadow(jobs::Gmixer[2], 0);
    TextDrawSetOutline(jobs::Gmixer[2], 0);
    TextDrawBackgroundColor(jobs::Gmixer[2], 255);
    TextDrawFont(jobs::Gmixer[2], 4);
    TextDrawSetProportional(jobs::Gmixer[2], 1);

    jobs::Gmixer[3] = TextDrawCreate(252.000, 254.000, "LD_SPAC:white");
    TextDrawTextSize(jobs::Gmixer[3], 45.000, 18.000);
    TextDrawAlignment(jobs::Gmixer[3], 1);
    TextDrawColor(jobs::Gmixer[3], -376014081);
    TextDrawSetShadow(jobs::Gmixer[3], 0);
    TextDrawSetOutline(jobs::Gmixer[3], 0);
    TextDrawBackgroundColor(jobs::Gmixer[3], 255);
    TextDrawFont(jobs::Gmixer[3], 4);
    TextDrawSetProportional(jobs::Gmixer[3], 1);

    jobs::Gmixer[4] = TextDrawCreate(301.000, 254.000, "LD_SPAC:white");
    TextDrawTextSize(jobs::Gmixer[4], 45.000, 18.000);
    TextDrawAlignment(jobs::Gmixer[4], 1);
    TextDrawColor(jobs::Gmixer[4], -376014081);
    TextDrawSetShadow(jobs::Gmixer[4], 0);
    TextDrawSetOutline(jobs::Gmixer[4], 0);
    TextDrawBackgroundColor(jobs::Gmixer[4], 255);
    TextDrawFont(jobs::Gmixer[4], 4);
    TextDrawSetProportional(jobs::Gmixer[4], 1);

    jobs::Gmixer[5] = TextDrawCreate(351.000, 254.000, "LD_SPAC:white");
    TextDrawTextSize(jobs::Gmixer[5], 45.000, 18.000);
    TextDrawAlignment(jobs::Gmixer[5], 1);
    TextDrawColor(jobs::Gmixer[5], -376014081);
    TextDrawSetShadow(jobs::Gmixer[5], 0);
    TextDrawSetOutline(jobs::Gmixer[5], 0);
    TextDrawBackgroundColor(jobs::Gmixer[5], 255);
    TextDrawFont(jobs::Gmixer[5], 4);
    TextDrawSetProportional(jobs::Gmixer[5], 1);

    jobs::Gmixer[6] = TextDrawCreate(400.000, 254.000, "LD_SPAC:white");
    TextDrawTextSize(jobs::Gmixer[6], 45.000, 18.000);
    TextDrawAlignment(jobs::Gmixer[6], 1);
    TextDrawColor(jobs::Gmixer[6], -376014081);
    TextDrawSetShadow(jobs::Gmixer[6], 0);
    TextDrawSetOutline(jobs::Gmixer[6], 0);
    TextDrawBackgroundColor(jobs::Gmixer[6], 255);
    TextDrawFont(jobs::Gmixer[6], 4);
    TextDrawSetProportional(jobs::Gmixer[6], 1);

    jobs::Gmixer[7] = TextDrawCreate(279.000, 289.000, "LD_SPAC:white");
    TextDrawTextSize(jobs::Gmixer[7], 91.000, 20.000);
    TextDrawAlignment(jobs::Gmixer[7], 1);
    TextDrawColor(jobs::Gmixer[7], -1306385665);
    TextDrawSetShadow(jobs::Gmixer[7], 0);
    TextDrawSetOutline(jobs::Gmixer[7], 0);
    TextDrawBackgroundColor(jobs::Gmixer[7], 255);
    TextDrawFont(jobs::Gmixer[7], 4);
    TextDrawSetProportional(jobs::Gmixer[7], 1);

    jobs::Gmixer[8] = TextDrawCreate(319.000, 90.000, "Job Mix");
    TextDrawLetterSize(jobs::Gmixer[8], 0.439, 2.299);
    TextDrawTextSize(jobs::Gmixer[8], 9.000, 135.000);
    TextDrawAlignment(jobs::Gmixer[8], 2);
    TextDrawColor(jobs::Gmixer[8], -1);
    TextDrawSetShadow(jobs::Gmixer[8], 0);
    TextDrawSetOutline(jobs::Gmixer[8], 1);
    TextDrawBackgroundColor(jobs::Gmixer[8], 150);
    TextDrawFont(jobs::Gmixer[8], 0);
    TextDrawSetProportional(jobs::Gmixer[8], 1);

    jobs::Gmixer[9] = TextDrawCreate(226.000, 127.000, "SEMEN");
    TextDrawLetterSize(jobs::Gmixer[9], 0.260, 1.299);
    TextDrawAlignment(jobs::Gmixer[9], 2);
    TextDrawColor(jobs::Gmixer[9], -1);
    TextDrawSetShadow(jobs::Gmixer[9], 0);
    TextDrawSetOutline(jobs::Gmixer[9], 0);
    TextDrawBackgroundColor(jobs::Gmixer[9], 150);
    TextDrawFont(jobs::Gmixer[9], 1);
    TextDrawSetProportional(jobs::Gmixer[9], 1);

    jobs::Gmixer[10] = TextDrawCreate(270.000, 127.000, "PASIR");
    TextDrawLetterSize(jobs::Gmixer[10], 0.260, 1.299);
    TextDrawAlignment(jobs::Gmixer[10], 2);
    TextDrawColor(jobs::Gmixer[10], -1);
    TextDrawSetShadow(jobs::Gmixer[10], 0);
    TextDrawSetOutline(jobs::Gmixer[10], 0);
    TextDrawBackgroundColor(jobs::Gmixer[10], 150);
    TextDrawFont(jobs::Gmixer[10], 1);
    TextDrawSetProportional(jobs::Gmixer[10], 1);

    jobs::Gmixer[11] = TextDrawCreate(321.000, 127.000, "KERIKIL 1-2");
    TextDrawLetterSize(jobs::Gmixer[11], 0.260, 1.299);
    TextDrawTextSize(jobs::Gmixer[11], 9.000, 44.000);
    TextDrawAlignment(jobs::Gmixer[11], 2);
    TextDrawColor(jobs::Gmixer[11], -1);
    TextDrawSetShadow(jobs::Gmixer[11], 0);
    TextDrawSetOutline(jobs::Gmixer[11], 0);
    TextDrawBackgroundColor(jobs::Gmixer[11], 150);
    TextDrawFont(jobs::Gmixer[11], 1);
    TextDrawSetProportional(jobs::Gmixer[11], 1);

    jobs::Gmixer[12] = TextDrawCreate(376.000, 127.000, "KERIKIL 2-3");
    TextDrawLetterSize(jobs::Gmixer[12], 0.260, 1.299);
    TextDrawTextSize(jobs::Gmixer[12], 9.000, 44.000);
    TextDrawAlignment(jobs::Gmixer[12], 2);
    TextDrawColor(jobs::Gmixer[12], -1);
    TextDrawSetShadow(jobs::Gmixer[12], 0);
    TextDrawSetOutline(jobs::Gmixer[12], 0);
    TextDrawBackgroundColor(jobs::Gmixer[12], 150);
    TextDrawFont(jobs::Gmixer[12], 1);
    TextDrawSetProportional(jobs::Gmixer[12], 1);

    jobs::Gmixer[13] = TextDrawCreate(422.000, 127.000, "AIR");
    TextDrawLetterSize(jobs::Gmixer[13], 0.260, 1.299);
    TextDrawTextSize(jobs::Gmixer[13], 9.000, 44.000);
    TextDrawAlignment(jobs::Gmixer[13], 2);
    TextDrawColor(jobs::Gmixer[13], -1);
    TextDrawSetShadow(jobs::Gmixer[13], 0);
    TextDrawSetOutline(jobs::Gmixer[13], 0);
    TextDrawBackgroundColor(jobs::Gmixer[13], 150);
    TextDrawFont(jobs::Gmixer[13], 1);
    TextDrawSetProportional(jobs::Gmixer[13], 1);

    jobs::Gmixer[14] = TextDrawCreate(322.000, 223.000, "Batching");
    TextDrawLetterSize(jobs::Gmixer[14], 0.439, 2.299);
    TextDrawTextSize(jobs::Gmixer[14], 9.000, 135.000);
    TextDrawAlignment(jobs::Gmixer[14], 2);
    TextDrawColor(jobs::Gmixer[14], -1);
    TextDrawSetShadow(jobs::Gmixer[14], 0);
    TextDrawSetOutline(jobs::Gmixer[14], 1);
    TextDrawBackgroundColor(jobs::Gmixer[14], 150);
    TextDrawFont(jobs::Gmixer[14], 0);
    TextDrawSetProportional(jobs::Gmixer[14], 1);

    jobs::GBMixer[0] = TextDrawCreate(476.000, 169.000, "LD_SPAC:white");
    TextDrawTextSize(jobs::GBMixer[0], 63.000, 15.000);
    TextDrawAlignment(jobs::GBMixer[0], 1);
    TextDrawColor(jobs::GBMixer[0], 255);
    TextDrawSetShadow(jobs::GBMixer[0], 0);
    TextDrawSetOutline(jobs::GBMixer[0], 0);
    TextDrawBackgroundColor(jobs::GBMixer[0], 255);
    TextDrawFont(jobs::GBMixer[0], 4);
    TextDrawSetProportional(jobs::GBMixer[0], 1);

    jobs::GBMixer[1] = TextDrawCreate(477.000, 170.000, "LD_SPAC:white");
    TextDrawTextSize(jobs::GBMixer[1], 61.000, 13.000);
    TextDrawAlignment(jobs::GBMixer[1], 1);
    TextDrawColor(jobs::GBMixer[1], 8421631);
    TextDrawSetShadow(jobs::GBMixer[1], 0);
    TextDrawSetOutline(jobs::GBMixer[1], 0);
    TextDrawBackgroundColor(jobs::GBMixer[1], 255);
    TextDrawFont(jobs::GBMixer[1], 4);
    TextDrawSetProportional(jobs::GBMixer[1], 1);

    jobs::GBMixer[2] = TextDrawCreate(491.000, 156.000, "SLUMP");
    TextDrawLetterSize(jobs::GBMixer[2], 0.300, 1.399);
    TextDrawAlignment(jobs::GBMixer[2], 1);
    TextDrawColor(jobs::GBMixer[2], -1);
    TextDrawSetShadow(jobs::GBMixer[2], 1);
    TextDrawSetOutline(jobs::GBMixer[2], 0);
    TextDrawBackgroundColor(jobs::GBMixer[2], 150);
    TextDrawFont(jobs::GBMixer[2], 1);
    TextDrawSetProportional(jobs::GBMixer[2], 1);
}

jobs_mixer_create_ptd(playerid)
{
    jobs::Pmixer[playerid][0] = CreatePlayerTextDraw(playerid, 226.000, 183.000, "100");
    PlayerTextDrawLetterSize(playerid, jobs::Pmixer[playerid][0], 0.260, 1.299);
    PlayerTextDrawTextSize(playerid, jobs::Pmixer[playerid][0], 15.000, 32.000);
    PlayerTextDrawAlignment(playerid, jobs::Pmixer[playerid][0], 2);
    PlayerTextDrawColor(playerid, jobs::Pmixer[playerid][0], -5963521);
    PlayerTextDrawSetShadow(playerid, jobs::Pmixer[playerid][0], 0);
    PlayerTextDrawSetOutline(playerid, jobs::Pmixer[playerid][0], 0);
    PlayerTextDrawBackgroundColor(playerid, jobs::Pmixer[playerid][0], 150);
    PlayerTextDrawFont(playerid, jobs::Pmixer[playerid][0], 1);
    PlayerTextDrawSetProportional(playerid, jobs::Pmixer[playerid][0], 1);

    jobs::Pmixer[playerid][1] = CreatePlayerTextDraw(playerid, 270.000, 183.000, "100");
    PlayerTextDrawLetterSize(playerid, jobs::Pmixer[playerid][1], 0.260, 1.299);
    PlayerTextDrawTextSize(playerid, jobs::Pmixer[playerid][1], 15.000, 32.000);
    PlayerTextDrawAlignment(playerid, jobs::Pmixer[playerid][1], 2);
    PlayerTextDrawColor(playerid, jobs::Pmixer[playerid][1], -5963521);
    PlayerTextDrawSetShadow(playerid, jobs::Pmixer[playerid][1], 0);
    PlayerTextDrawSetOutline(playerid, jobs::Pmixer[playerid][1], 0);
    PlayerTextDrawBackgroundColor(playerid, jobs::Pmixer[playerid][1], 150);
    PlayerTextDrawFont(playerid, jobs::Pmixer[playerid][1], 1);
    PlayerTextDrawSetProportional(playerid, jobs::Pmixer[playerid][1], 1);

    jobs::Pmixer[playerid][2] = CreatePlayerTextDraw(playerid, 320.000, 183.000, "100");
    PlayerTextDrawLetterSize(playerid, jobs::Pmixer[playerid][2], 0.260, 1.299);
    PlayerTextDrawTextSize(playerid, jobs::Pmixer[playerid][2], 15.000, 32.000);
    PlayerTextDrawAlignment(playerid, jobs::Pmixer[playerid][2], 2);
    PlayerTextDrawColor(playerid, jobs::Pmixer[playerid][2], -5963521);
    PlayerTextDrawSetShadow(playerid, jobs::Pmixer[playerid][2], 0);
    PlayerTextDrawSetOutline(playerid, jobs::Pmixer[playerid][2], 0);
    PlayerTextDrawBackgroundColor(playerid, jobs::Pmixer[playerid][2], 150);
    PlayerTextDrawFont(playerid, jobs::Pmixer[playerid][2], 1);
    PlayerTextDrawSetProportional(playerid, jobs::Pmixer[playerid][2], 1);

    jobs::Pmixer[playerid][3] = CreatePlayerTextDraw(playerid, 374.000, 183.000, "100");
    PlayerTextDrawLetterSize(playerid, jobs::Pmixer[playerid][3], 0.260, 1.299);
    PlayerTextDrawTextSize(playerid, jobs::Pmixer[playerid][3], 15.000, 32.000);
    PlayerTextDrawAlignment(playerid, jobs::Pmixer[playerid][3], 2);
    PlayerTextDrawColor(playerid, jobs::Pmixer[playerid][3], -5963521);
    PlayerTextDrawSetShadow(playerid, jobs::Pmixer[playerid][3], 0);
    PlayerTextDrawSetOutline(playerid, jobs::Pmixer[playerid][3], 0);
    PlayerTextDrawBackgroundColor(playerid, jobs::Pmixer[playerid][3], 150);
    PlayerTextDrawFont(playerid, jobs::Pmixer[playerid][3], 1);
    PlayerTextDrawSetProportional(playerid, jobs::Pmixer[playerid][3], 1);

    jobs::Pmixer[playerid][4] = CreatePlayerTextDraw(playerid, 423.000, 183.000, "100");
    PlayerTextDrawLetterSize(playerid, jobs::Pmixer[playerid][4], 0.260, 1.299);
    PlayerTextDrawTextSize(playerid, jobs::Pmixer[playerid][4], 15.000, 32.000);
    PlayerTextDrawAlignment(playerid, jobs::Pmixer[playerid][4], 2);
    PlayerTextDrawColor(playerid, jobs::Pmixer[playerid][4], -5963521);
    PlayerTextDrawSetShadow(playerid, jobs::Pmixer[playerid][4], 0);
    PlayerTextDrawSetOutline(playerid, jobs::Pmixer[playerid][4], 0);
    PlayerTextDrawBackgroundColor(playerid, jobs::Pmixer[playerid][4], 150);
    PlayerTextDrawFont(playerid, jobs::Pmixer[playerid][4], 1);
    PlayerTextDrawSetProportional(playerid, jobs::Pmixer[playerid][4], 1);

    jobs::Pmixer[playerid][5] = CreatePlayerTextDraw(playerid, 225.000, 257.000, "0");
    PlayerTextDrawLetterSize(playerid, jobs::Pmixer[playerid][5], 0.260, 1.299);
    PlayerTextDrawTextSize(playerid, jobs::Pmixer[playerid][5], 15.000, 32.000);
    PlayerTextDrawAlignment(playerid, jobs::Pmixer[playerid][5], 2);
    PlayerTextDrawColor(playerid, jobs::Pmixer[playerid][5], -1);
    PlayerTextDrawSetShadow(playerid, jobs::Pmixer[playerid][5], 0);
    PlayerTextDrawSetOutline(playerid, jobs::Pmixer[playerid][5], 0);
    PlayerTextDrawBackgroundColor(playerid, jobs::Pmixer[playerid][5], 150);
    PlayerTextDrawFont(playerid, jobs::Pmixer[playerid][5], 1);
    PlayerTextDrawSetProportional(playerid, jobs::Pmixer[playerid][5], 1);
    PlayerTextDrawSetSelectable(playerid, jobs::Pmixer[playerid][5], 1);

    jobs::Pmixer[playerid][6] = CreatePlayerTextDraw(playerid, 275.000, 257.000, "0");
    PlayerTextDrawLetterSize(playerid, jobs::Pmixer[playerid][6], 0.260, 1.299);
    PlayerTextDrawTextSize(playerid, jobs::Pmixer[playerid][6], 15.000, 32.000);
    PlayerTextDrawAlignment(playerid, jobs::Pmixer[playerid][6], 2);
    PlayerTextDrawColor(playerid, jobs::Pmixer[playerid][6], -1);
    PlayerTextDrawSetShadow(playerid, jobs::Pmixer[playerid][6], 0);
    PlayerTextDrawSetOutline(playerid, jobs::Pmixer[playerid][6], 0);
    PlayerTextDrawBackgroundColor(playerid, jobs::Pmixer[playerid][6], 150);
    PlayerTextDrawFont(playerid, jobs::Pmixer[playerid][6], 1);
    PlayerTextDrawSetProportional(playerid, jobs::Pmixer[playerid][6], 1);
    PlayerTextDrawSetSelectable(playerid, jobs::Pmixer[playerid][6], 1);

    jobs::Pmixer[playerid][7] = CreatePlayerTextDraw(playerid, 324.000, 257.000, "0");
    PlayerTextDrawLetterSize(playerid, jobs::Pmixer[playerid][7], 0.260, 1.299);
    PlayerTextDrawTextSize(playerid, jobs::Pmixer[playerid][7], 15.000, 32.000);
    PlayerTextDrawAlignment(playerid, jobs::Pmixer[playerid][7], 2);
    PlayerTextDrawColor(playerid, jobs::Pmixer[playerid][7], -1);
    PlayerTextDrawSetShadow(playerid, jobs::Pmixer[playerid][7], 0);
    PlayerTextDrawSetOutline(playerid, jobs::Pmixer[playerid][7], 0);
    PlayerTextDrawBackgroundColor(playerid, jobs::Pmixer[playerid][7], 150);
    PlayerTextDrawFont(playerid, jobs::Pmixer[playerid][7], 1);
    PlayerTextDrawSetProportional(playerid, jobs::Pmixer[playerid][7], 1);
    PlayerTextDrawSetSelectable(playerid, jobs::Pmixer[playerid][7], 1);

    jobs::Pmixer[playerid][8] = CreatePlayerTextDraw(playerid, 374.000, 257.000, "0");
    PlayerTextDrawLetterSize(playerid, jobs::Pmixer[playerid][8], 0.260, 1.299);
    PlayerTextDrawTextSize(playerid, jobs::Pmixer[playerid][8], 15.000, 32.000);
    PlayerTextDrawAlignment(playerid, jobs::Pmixer[playerid][8], 2);
    PlayerTextDrawColor(playerid, jobs::Pmixer[playerid][8], -1);
    PlayerTextDrawSetShadow(playerid, jobs::Pmixer[playerid][8], 0);
    PlayerTextDrawSetOutline(playerid, jobs::Pmixer[playerid][8], 0);
    PlayerTextDrawBackgroundColor(playerid, jobs::Pmixer[playerid][8], 150);
    PlayerTextDrawFont(playerid, jobs::Pmixer[playerid][8], 1);
    PlayerTextDrawSetProportional(playerid, jobs::Pmixer[playerid][8], 1);
    PlayerTextDrawSetSelectable(playerid, jobs::Pmixer[playerid][8], 1);

    jobs::Pmixer[playerid][9] = CreatePlayerTextDraw(playerid, 423.000, 257.000, "0");
    PlayerTextDrawLetterSize(playerid, jobs::Pmixer[playerid][9], 0.260, 1.299);
    PlayerTextDrawTextSize(playerid, jobs::Pmixer[playerid][9], 15.000, 32.000);
    PlayerTextDrawAlignment(playerid, jobs::Pmixer[playerid][9], 2);
    PlayerTextDrawColor(playerid, jobs::Pmixer[playerid][9], -1);
    PlayerTextDrawSetShadow(playerid, jobs::Pmixer[playerid][9], 0);
    PlayerTextDrawSetOutline(playerid, jobs::Pmixer[playerid][9], 0);
    PlayerTextDrawBackgroundColor(playerid, jobs::Pmixer[playerid][9], 150);
    PlayerTextDrawFont(playerid, jobs::Pmixer[playerid][9], 1);
    PlayerTextDrawSetProportional(playerid, jobs::Pmixer[playerid][9], 1);
    PlayerTextDrawSetSelectable(playerid, jobs::Pmixer[playerid][9], 1);

    jobs::Pmixer[playerid][10] = CreatePlayerTextDraw(playerid, 324.000, 292.000, "CONFIRM");
    PlayerTextDrawLetterSize(playerid, jobs::Pmixer[playerid][10], 0.260, 1.299);
    PlayerTextDrawTextSize(playerid, jobs::Pmixer[playerid][10], 15.000, 32.000);
    PlayerTextDrawAlignment(playerid, jobs::Pmixer[playerid][10], 2);
    PlayerTextDrawColor(playerid, jobs::Pmixer[playerid][10], -1);
    PlayerTextDrawSetShadow(playerid, jobs::Pmixer[playerid][10], 0);
    PlayerTextDrawSetOutline(playerid, jobs::Pmixer[playerid][10], 0);
    PlayerTextDrawBackgroundColor(playerid, jobs::Pmixer[playerid][10], 150);
    PlayerTextDrawFont(playerid, jobs::Pmixer[playerid][10], 1);
    PlayerTextDrawSetProportional(playerid, jobs::Pmixer[playerid][10], 1);
    PlayerTextDrawSetSelectable(playerid, jobs::Pmixer[playerid][10], 1);

    jobs::PBMixer[playerid] = CreatePlayerTextDraw(playerid, 477.000, 170.000, "LD_SPAC:white");
    PlayerTextDrawTextSize(playerid, jobs::PBMixer[playerid], 61.000, 13.000);
    PlayerTextDrawAlignment(playerid, jobs::PBMixer[playerid], 1);
    PlayerTextDrawColor(playerid, jobs::PBMixer[playerid], -1);
    PlayerTextDrawSetShadow(playerid, jobs::PBMixer[playerid], 0);
    PlayerTextDrawSetOutline(playerid, jobs::PBMixer[playerid], 0);
    PlayerTextDrawBackgroundColor(playerid, jobs::PBMixer[playerid], 255);
    PlayerTextDrawFont(playerid, jobs::PBMixer[playerid], 4);
    PlayerTextDrawSetProportional(playerid, jobs::PBMixer[playerid], 1);
}

hook OnGameModeInit()
{
    jobs::mixer_create_gtd();
    jobs::mixer_label();
    return 1;
}

stock OnLoadMixerProperty(playerid)
{
    jobs::mixer_create_ptd(playerid);
    jobs::mixer_reset_enum(playerid);
    RemoveBuildingForPlayer(playerid, 1282, -2406.489, 2351.659, 4.656, 0.250);
    RemoveBuildingForPlayer(playerid, 1282, -2404.209, 2352.179, 4.656, 0.250);
    RemoveBuildingForPlayer(playerid, 1282, -2399.639, 2353.219, 4.656, 0.250);
    RemoveBuildingForPlayer(playerid, 1282, -2397.350, 2353.729, 4.656, 0.250);
    RemoveBuildingForPlayer(playerid, 1282, -2395.070, 2354.250, 4.656, 0.250);
    RemoveBuildingForPlayer(playerid, 1282, -2392.780, 2354.770, 4.656, 0.250);
    return 1;
}

FUNC::ShowMixTD(playerid)
{
    static str[6];
    for(new gtd; gtd<15; gtd++)
    {
        TextDrawShowForPlayer(playerid, jobs::Gmixer[gtd]);
    }
    for(new ptd; ptd<11; ptd++)
    {
        PlayerTextDrawShow(playerid, jobs::Pmixer[playerid][ptd]);
    }
    for(new i; i<5; i++)
    {
        jobs::mixer[playerid][mixerAmount][i] = RandomEx(111,999);
        format(str, 5, "%d", jobs::mixer[playerid][mixerAmount][i]);
        PlayerTextDrawSetString(playerid, jobs::Pmixer[playerid][i], str);
    }
    SelectTextDraw(playerid, COLOR_GOLD);
    return 1;
}

FUNC::jobs_mixer_select_case(playerid, cases)
{
    jobs::mixer[playerid][mixerSelectCase] = cases;
    ShowPlayerDialog(playerid, DIALOG_MIXER, DIALOG_STYLE_INPUT, "{FFB6C1}Happy Roleplay{FFFFFF} - Batching Plant", "Mohon masukkan jumlah takaran yang akan ditetapkan:", "Set", "Batal");
    CancelSelectTextDraw(playerid);
    return 1;
}


FUNC::jobs_mixer_confirm(playerid)
{

    if(jobs::mixer[playerid][mixerConfirm][0] != jobs::mixer[playerid][mixerAmount][0])
    {
        ShowTDN(playerid, NOTIFICATION_ERROR, "Takaran semen tidak sesuai spek!");
        return 1;
    }
    else if(jobs::mixer[playerid][mixerConfirm][1] != jobs::mixer[playerid][mixerAmount][1])
    {
        ShowTDN(playerid, NOTIFICATION_ERROR, "Takaran pasir tidak sesuai spek!");
        return 1;
    }
    else if(jobs::mixer[playerid][mixerConfirm][2] != jobs::mixer[playerid][mixerAmount][2])
    {
        ShowTDN(playerid, NOTIFICATION_ERROR, "Takaran kerikil 1-2 tidak sesuai spek!");
        return 1;
    }
    else if(jobs::mixer[playerid][mixerConfirm][3] != jobs::mixer[playerid][mixerAmount][3])
    {
        ShowTDN(playerid, NOTIFICATION_ERROR, "Takaran kerikil 2-3 tidak sesuai spek!");
        return 1;
    }
    else if(jobs::mixer[playerid][mixerConfirm][4] != jobs::mixer[playerid][mixerAmount][4])
    {
        ShowTDN(playerid, NOTIFICATION_ERROR, "Takaran air tidak sesuai spek!");
        return 1;
    }
    else
    {
        for(new gtd; gtd<15; gtd++)
        {
            TextDrawHideForPlayer(playerid, jobs::Gmixer[gtd]);
        }
        for(new ptd; ptd<11; ptd++)
        {
            PlayerTextDrawHide(playerid, jobs::Pmixer[playerid][ptd]);
        }
        CancelSelectTextDraw(playerid);
        PlayerTextDrawSetString(playerid, ProgressBar[playerid][3], "CAMPUR BETON");
        ShowProgressBar(playerid);

        jobs::mixer[playerid][mixerTimer] = SetTimerEx("AmbilCoran", 800, true, "i", playerid);
    }
    return 1;
}

FUNC::AmbilCoran(playerid)
{
    if(!IsPlayerConnected(playerid))
    {
        KillTimer(jobs::mixer[playerid][mixerTimer]);
        jobs::mixer[playerid][mixerTimer] = -1;
        AccountData[playerid][ActivityTime] = 0;
        HideProgressBar(playerid);
        return 0;
    }

    if(AccountData[playerid][pInjured])
    {
        KillTimer(jobs::mixer[playerid][mixerTimer]);
        jobs::mixer[playerid][mixerTimer] = -1;
        AccountData[playerid][ActivityTime] = 0;
        HideProgressBar(playerid);

        ClearAnimations(playerid, 1);
        StopLoopingAnim(playerid);
        SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
        ShowTDN(playerid, NOTIFICATION_ERROR, "Anda sedang pingsan!");
        return 0;
    }
    if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER)
    {
        KillTimer(jobs::mixer[playerid][mixerTimer]);
        jobs::mixer[playerid][mixerTimer] = -1;
        AccountData[playerid][ActivityTime] = 0;
        HideProgressBar(playerid);
        ShowTDN(playerid, NOTIFICATION_ERROR, "Anda gagal memuat coran karena turun dari kendaraan!");
    }

    if(AccountData[playerid][ActivityTime] >= 4)
    {
        KillTimer(jobs::mixer[playerid][mixerTimer]);
        jobs::mixer[playerid][mixerTimer] = -1;
        AccountData[playerid][ActivityTime] = 0;
        HideProgressBar(playerid);
        jobs::mixer[playerid][mixerSlump] = 100;
        for(new i; i<3; i++)
        {
            TextDrawShowForPlayer(playerid, jobs::GBMixer[i]);
        }
        PlayerTextDrawShow(playerid, jobs::PBMixer[playerid]);
        jobs::mixer[playerid][mixerDuty][1] = true;
        jobs::mixer[playerid][mixerSlumpTimer] =  SetTimerEx("SlumpUpdate", 20000, false, "i", playerid);
        SetPlayerRaceCheckpoint(playerid, 1, -2374.4529,2369.3938,4.4273, 0.0, 0.0, 0.0, 5.0);
        ShowPlayerFooter(playerid, "~w~~h~Antarkan ~g~beton ~w~ke lokasi proyek yang~n~~r~~h~di tandai~n~~w~pada minimap anda dan jaga~n~~w~~h~kualitas ~y~slump ~w~~h~agar tidak kering", 5000, 1);
    }
    else
    {
        AccountData[playerid][ActivityTime] ++;

        new Float: progressvalue; 
        progressvalue = AccountData[playerid][ActivityTime]*103/4;
        PlayerTextDrawTextSize(playerid, ProgressBar[playerid][2], progressvalue, 21.0);
        PlayerTextDrawShow(playerid, ProgressBar[playerid][2]);
        return 0;
    }
    return 1;
}

stock jobs_mixer_reset_enum(playerid)
{
    for(new i; i<5;i++)
    {
        jobs::mixer[playerid][mixerAmount][i] = 0;
        jobs::mixer[playerid][mixerConfirm][i] = 0;
    }
    jobs::mixer[playerid][mixerSelectCase] = 0;
    jobs::mixer[playerid][mixerDuty][0] = false;
    jobs::mixer[playerid][mixerDuty][1] = false;
    jobs::mixer[playerid][mixerDuty][2] = false;
    jobs::mixer[playerid][mixerVehicle] = INVALID_VEHICLE_ID;
    jobs::mixer[playerid][mixerTimer] = -1;
    jobs::mixer[playerid][mixerSlumpTimer] = -1;
    jobs::mixer[playerid][mixerSlump] = 0;
    return 1;
}

stock slumpminus(playerid)
{
    jobs::mixer[playerid][mixerSlump]--;

    new Float: progressvalue; 
    progressvalue = jobs::mixer[playerid][mixerSlump]*61/100;
    PlayerTextDrawTextSize(playerid, jobs::PBMixer[playerid], progressvalue, 13.0);
    PlayerTextDrawShow(playerid, jobs::PBMixer[playerid]);
    return 1;
}

FUNC::SlumpUpdate(playerid)
{
    if(GetPlayerJob(playerid) == JOB_DRIVER_MIXERS)
    {
        if(jobs::mixer[playerid][mixerSlump] > 0)
        {
            slumpminus(playerid);
            new rand=RandomEx(20000,25000);
            jobs::mixer[playerid][mixerSlumpTimer] = SetTimerEx("SlumpUpdate", rand, false, "i", playerid);
        }
    }
    return 1;
}

jobs_mixer_label()
{
    //point start job
    CreateDynamicPickup(1275, 23, 641.2187,1238.3390,11.6796);
    CreateDynamic3DTextLabel(""LIGHT_GREEN"[Y] {FFFFFF}mulai pekjerjaan supir mixer", COLOR_GOLD, 641.2187,1238.3390,11.6796, 15.0);
    
    //point batching
    CreateDynamic3DTextLabel(""LIGHT_GREEN"[klakson] {FFFFFF}minta beton dituang", COLOR_GOLD, 590.0992,1243.8767,11.7188, 20.0);
}
FUNC::CorLokasi(playerid)
{
    if(!IsPlayerConnected(playerid))
    {
        KillTimer(jobs::mixer[playerid][mixerTimer]);
        jobs::mixer[playerid][mixerTimer] = -1;
        AccountData[playerid][ActivityTime] = 0;
        HideProgressBar(playerid);
        return 0;
    }

    if(AccountData[playerid][pInjured])
    {
        KillTimer(jobs::mixer[playerid][mixerTimer]);
        jobs::mixer[playerid][mixerTimer] = -1;
        AccountData[playerid][ActivityTime] = 0;
        HideProgressBar(playerid);

        ClearAnimations(playerid, 1);
        StopLoopingAnim(playerid);
        SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
        ShowTDN(playerid, NOTIFICATION_ERROR, "Anda sedang pingsan!");
        return 0;
    }
    if(AccountData[playerid][ActivityTime] >= 15)
    {
        KillTimer(jobs::mixer[playerid][mixerTimer]);
        jobs::mixer[playerid][mixerTimer] = -1;
        AccountData[playerid][ActivityTime] = 0;
        HideProgressBar(playerid);
        DisablePlayerCheckpoint(playerid);
        if(jobs::mixer[playerid][mixerSlump] > 80)
        {
            ShowTDN(playerid, NOTIFICATION_SUKSES, "Anda menjaga slump beton sangat baik!");
            GiveMoney(playerid, 850);
            ShowPlayerFooter(playerid, "~w~~h~Kembali ke ~g~Batching Plant ~w~untuk~n~menyelesaikan pekerjaan", 5000, 1);
        }
        else if(jobs::mixer[playerid][mixerSlump] > 50)
        {
            ShowTDN(playerid, NOTIFICATION_SUKSES, "Anda menjaga slump beton cukup baik!");
            GiveMoney(playerid, 650);
            ShowPlayerFooter(playerid, "~w~~h~Kembali ke ~g~Batching Plant ~w~untuk~n~menyelesaikan pekerjaan", 5000, 1);
        }
        else if(jobs::mixer[playerid][mixerSlump] > 30)
        {
            ShowTDN(playerid, NOTIFICATION_SUKSES, "Anda menjaga slump beton cukup!");
            GiveMoney(playerid, 350);
            ShowPlayerFooter(playerid, "~w~~h~Kembali ke ~g~Batching Plant ~w~untuk~n~menyelesaikan pekerjaan", 5000, 1);
        }
        else
        {
            ShowTDN(playerid, NOTIFICATION_SUKSES, "Anda gagal menjaga kualitas slump beton!");
            GiveMoney(playerid, 0);
            ShowPlayerFooter(playerid, "~w~~h~Kembali ke ~g~Batching Plant ~w~untuk~n~menyelesaikan pekerjaan", 5000, 1);
        }
        for(new i; i<3; i++)
        {
            TextDrawHideForPlayer(playerid, jobs::GBMixer[i]);
        }
        PlayerTextDrawHide(playerid, jobs::PBMixer[playerid]);
        jobs::mixer[playerid][mixerDuty][2] = true;
        jobs::mixer[playerid][mixerSlump] = 0;
        KillTimer(jobs::mixer[playerid][mixerSlumpTimer]);
        SetPlayerRaceCheckpoint(playerid, 1, 573.1599,1218.2861,11.7113, 0.0, 0.0, 0.0, 5.0);
    }
    else
    {
        AccountData[playerid][ActivityTime] ++;

        new Float: progressvalue; 
        progressvalue = AccountData[playerid][ActivityTime]*103/15;
        PlayerTextDrawTextSize(playerid, ProgressBar[playerid][2], progressvalue, 21.0);
        PlayerTextDrawShow(playerid, ProgressBar[playerid][2]);
        return 0;
    }
    return 1;
}